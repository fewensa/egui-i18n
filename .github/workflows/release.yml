name: Release

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  DOCKER_REGISTRY: ghcr.io

jobs:
  build-egui-i18n:
    name: Build egui-i18n
    strategy:
      matrix:
        package:
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-latest
            slug: linux-x86_64
          - target: x86_64-pc-windows-gnu
            runner: ubuntu-latest
            slug: windows-x86_64
          - target: x86_64-apple-darwin
            runner: macos-latest
            slug: darwin-x86_64
          - target: aarch64-apple-darwin
            runner: macos-latest
            slug: darwin-aarch64
    runs-on: ${{ matrix.package.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.package.target }}

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.package.target }}
          args: "--locked --release"
          strip: true

      - name: Collect artifacts
        run: |
          mkdir dist
          FILE_SUFFIX=''
          if [[ "${{ matrix.package.target }}" == "x86_64-pc-windows-gnu" ]]; then
            FILE_SUFFIX='.exe'
          fi
          cp target/${{ matrix.package.target }}/release/egui-i18n-cli${FILE_SUFFIX} dist/egui-i18n-cli-${{ matrix.package.slug }}${FILE_SUFFIX}
          cp target/${{ matrix.package.target }}/release/egui-i18n-example-classic${FILE_SUFFIX} dist/example-classic-${{ matrix.package.slug }}${FILE_SUFFIX}
          cp target/${{ matrix.package.target }}/release/egui-i18n-example-fluent${FILE_SUFFIX} dist/example-fluent-${{ matrix.package.slug }}${FILE_SUFFIX}

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.package.target }}
          path: dist
          overwrite: true

  publish-crate:
    name: Publish crate
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Package
        run: cargo package

      - name: Publish crate
        run: cargo publish --token ${{ secrets.TOKEN_CRATES_IO }}

  publish-github-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build-egui-i18n
      - publish-crate
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true

      - name: Check
        run: |
          ls -R

      - name: Hash file
        run: |
          (sha256sum * | tee sha256sums.txt)

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./*

  clean-artifacts:
    name: Clean artifacts
    runs-on: ubuntu-latest
    needs: [publish-github-release]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: artifact-*
